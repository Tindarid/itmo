module Generate where

import Grammar

generateSimple a = 
    [
    a,
    Impl a (Impl (Not a) a),
    Impl (Not a) a,
    Impl (Not a) (Impl (Not a) (Not a)),
    Impl (Impl (Not a) (Impl (Not a) (Not a))) (Impl (Impl (Not a) (Impl (Impl (Not a) (Not a)) (Not a))) (Impl (Not a) (Not a))),
    Impl (Impl (Not a) (Impl (Impl (Not a) (Not a)) (Not a))) (Impl (Not a) (Not a)),
    Impl (Not a) (Impl (Impl (Not a) (Not a)) (Not a)), 
    Impl (Not a) (Not a),
    Impl (Impl (Not a) a) (Impl (Impl (Not a) (Not a)) (Not (Not a))),
    Impl (Impl (Not a) (Not a)) (Not (Not a)),
    Not (Not a)
    ]

generate10 a = 
    [
    (Impl a (Impl (Not (Not a)) a)),
    (Impl (Impl a (Impl (Not (Not a)) a)) (Impl (Not (Impl (Not (Not a)) a)) (Impl a (Impl (Not (Not a)) a)))),
    (Impl (Not (Impl (Not (Not a)) a)) (Impl a (Impl (Not (Not a)) a))),
    (Impl (Not (Impl (Not (Not a)) a)) (Impl a (Not (Impl (Not (Not a)) a)))),
    (Impl (Impl a (Impl (Not (Not a)) a)) (Impl (Impl a (Not (Impl (Not (Not a)) a))) (Not a))),
    (Impl (Impl (Impl a (Impl (Not (Not a)) a)) (Impl (Impl a (Not (Impl (Not (Not a)) a))) (Not a))) (Impl (Not (Impl (Not (Not a)) a)) (Impl (Impl a (Impl (Not (Not a)) a)) (Impl (Impl a (Not (Impl (Not (Not a)) a))) (Not a))))),
    (Impl (Not (Impl (Not (Not a)) a)) (Impl (Impl a (Impl (Not (Not a)) a)) (Impl (Impl a (Not (Impl (Not (Not a)) a))) (Not a)))),
    (Impl (Impl (Not (Impl (Not (Not a)) a)) (Impl a (Impl (Not (Not a)) a))) (Impl (Impl (Not (Impl (Not (Not a)) a)) (Impl (Impl a (Impl (Not (Not a)) a)) (Impl (Impl a (Not (Impl (Not (Not a)) a))) (Not a)))) (Impl (Not (Impl (Not (Not a)) a)) (Impl (Impl a (Not (Impl (Not (Not a)) a))) (Not a))))),
    (Impl (Impl (Not (Impl (Not (Not a)) a)) (Impl (Impl a (Impl (Not (Not a)) a)) (Impl (Impl a (Not (Impl (Not (Not a)) a))) (Not a)))) (Impl (Not (Impl (Not (Not a)) a)) (Impl (Impl a (Not (Impl (Not (Not a)) a))) (Not a)))),
    (Impl (Not (Impl (Not (Not a)) a)) (Impl (Impl a (Not (Impl (Not (Not a)) a))) (Not a))),
    (Impl (Impl (Not (Impl (Not (Not a)) a)) (Impl a (Not (Impl (Not (Not a)) a)))) (Impl (Impl (Not (Impl (Not (Not a)) a)) (Impl (Impl a (Not (Impl (Not (Not a)) a))) (Not a))) (Impl (Not (Impl (Not (Not a)) a)) (Not a)))),
    (Impl (Impl (Not (Impl (Not (Not a)) a)) (Impl (Impl a (Not (Impl (Not (Not a)) a))) (Not a))) (Impl (Not (Impl (Not (Not a)) a)) (Not a))),
    (Impl (Not (Impl (Not (Not a)) a)) (Not a)),
    (Impl (Not a) (Impl (Not (Not a)) a)),
    (Impl (Impl (Not a) (Impl (Not (Not a)) a)) (Impl (Not (Impl (Not (Not a)) a)) (Impl (Not a) (Impl (Not (Not a)) a)))),
    (Impl (Not (Impl (Not (Not a)) a)) (Impl (Not a) (Impl (Not (Not a)) a))),
    (Impl (Not (Impl (Not (Not a)) a)) (Impl (Not a) (Not (Impl (Not (Not a)) a)))),
    (Impl (Impl (Not a) (Impl (Not (Not a)) a)) (Impl (Impl (Not a) (Not (Impl (Not (Not a)) a))) (Not (Not a)))),
    (Impl (Impl (Impl (Not a) (Impl (Not (Not a)) a)) (Impl (Impl (Not a) (Not (Impl (Not (Not a)) a))) (Not (Not a)))) (Impl (Not (Impl (Not (Not a)) a)) (Impl (Impl (Not a) (Impl (Not (Not a)) a)) (Impl (Impl (Not a) (Not (Impl (Not (Not a)) a))) (Not (Not a)))))),
    (Impl (Not (Impl (Not (Not a)) a)) (Impl (Impl (Not a) (Impl (Not (Not a)) a)) (Impl (Impl (Not a) (Not (Impl (Not (Not a)) a))) (Not (Not a))))),
    (Impl (Impl (Not (Impl (Not (Not a)) a)) (Impl (Not a) (Impl (Not (Not a)) a))) (Impl (Impl (Not (Impl (Not (Not a)) a)) (Impl (Impl (Not a) (Impl (Not (Not a)) a)) (Impl (Impl (Not a) (Not (Impl (Not (Not a)) a))) (Not (Not a))))) (Impl (Not (Impl (Not (Not a)) a)) (Impl (Impl (Not a) (Not (Impl (Not (Not a)) a))) (Not (Not a)))))),
    (Impl (Impl (Not (Impl (Not (Not a)) a)) (Impl (Impl (Not a) (Impl (Not (Not a)) a)) (Impl (Impl (Not a) (Not (Impl (Not (Not a)) a))) (Not (Not a))))) (Impl (Not (Impl (Not (Not a)) a)) (Impl (Impl (Not a) (Not (Impl (Not (Not a)) a))) (Not (Not a))))),
    (Impl (Not (Impl (Not (Not a)) a)) (Impl (Impl (Not a) (Not (Impl (Not (Not a)) a))) (Not (Not a)))),
    (Impl (Impl (Not (Impl (Not (Not a)) a)) (Impl (Not a) (Not (Impl (Not (Not a)) a)))) (Impl (Impl (Not (Impl (Not (Not a)) a)) (Impl (Impl (Not a) (Not (Impl (Not (Not a)) a))) (Not (Not a)))) (Impl (Not (Impl (Not (Not a)) a)) (Not (Not a))))),
    (Impl (Impl (Not (Impl (Not (Not a)) a)) (Impl (Impl (Not a) (Not (Impl (Not (Not a)) a))) (Not (Not a)))) (Impl (Not (Impl (Not (Not a)) a)) (Not (Not a)))),
    (Impl (Not (Impl (Not (Not a)) a)) (Not (Not a))),
    (Impl (Impl (Not (Impl (Not (Not a)) a)) (Not a)) (Impl (Impl (Not (Impl (Not (Not a)) a)) (Not (Not a))) (Not (Not (Impl (Not (Not a)) a))))),
    (Impl (Impl (Not (Impl (Not (Not a)) a)) (Not (Not a))) (Not (Not (Impl (Not (Not a)) a)))),
    (Not (Not (Impl (Not (Not a)) a)))
    ]

generateMP a b = 
    [
    (Not (Not a)),
    (Not (Not (Impl a b))),
    (Impl (Impl (Not b) (Not (Impl a b))) (Impl (Impl (Not b) (Not (Not (Impl a b)))) (Not (Not b)))),
    (Impl (Impl (Impl a b) (Not a)) (Impl (Impl (Impl a b) (Not (Not a))) (Not (Impl a b)))),
    (Impl (Impl (Impl (Impl a b) (Not a)) (Impl (Impl (Impl a b) (Not (Not a))) (Not (Impl a b)))) (Impl (Not b) (Impl (Impl (Impl a b) (Not a)) (Impl (Impl (Impl a b) (Not (Not a))) (Not (Impl a b)))))),
    (Impl (Not b) (Impl (Impl (Impl a b) (Not a)) (Impl (Impl (Impl a b) (Not (Not a))) (Not (Impl a b))))),
    (Impl (Not b) (Impl (Impl a b) (Not b))),
    (Impl (Not b) (Impl a (Not b))),
    (Impl (Impl (Not b) (Impl a (Not b))) (Impl (Not b) (Impl (Not b) (Impl a (Not b))))),
    (Impl (Not b) (Impl (Not b) (Impl a (Not b)))),
    (Impl (Impl (Not b) (Impl a (Not b))) (Impl (Impl a b) (Impl (Not b) (Impl a (Not b))))),
    (Impl (Impl (Impl (Not b) (Impl a (Not b))) (Impl (Impl a b) (Impl (Not b) (Impl a (Not b))))) (Impl (Not b) (Impl (Impl (Not b) (Impl a (Not b))) (Impl (Impl a b) (Impl (Not b) (Impl a (Not b))))))),
    (Impl (Not b) (Impl (Impl (Not b) (Impl a (Not b))) (Impl (Impl a b) (Impl (Not b) (Impl a (Not b)))))),
    (Impl (Impl (Not b) (Impl (Not b) (Impl a (Not b)))) (Impl (Impl (Not b) (Impl (Impl (Not b) (Impl a (Not b))) (Impl (Impl a b) (Impl (Not b) (Impl a (Not b)))))) (Impl (Not b) (Impl (Impl a b) (Impl (Not b) (Impl a (Not b))))))),
    (Impl (Impl (Not b) (Impl (Impl (Not b) (Impl a (Not b))) (Impl (Impl a b) (Impl (Not b) (Impl a (Not b)))))) (Impl (Not b) (Impl (Impl a b) (Impl (Not b) (Impl a (Not b)))))),
    (Impl (Not b) (Impl (Impl a b) (Impl (Not b) (Impl a (Not b))))),
    (Impl (Impl (Impl a b) (Not b)) (Impl (Impl (Impl a b) (Impl (Not b) (Impl a (Not b)))) (Impl (Impl a b) (Impl a (Not b))))),
    (Impl (Impl (Impl (Impl a b) (Not b)) (Impl (Impl (Impl a b) (Impl (Not b) (Impl a (Not b)))) (Impl (Impl a b) (Impl a (Not b))))) (Impl (Not b) (Impl (Impl (Impl a b) (Not b)) (Impl (Impl (Impl a b) (Impl (Not b) (Impl a (Not b)))) (Impl (Impl a b) (Impl a (Not b))))))),
    (Impl (Not b) (Impl (Impl (Impl a b) (Not b)) (Impl (Impl (Impl a b) (Impl (Not b) (Impl a (Not b)))) (Impl (Impl a b) (Impl a (Not b)))))),
    (Impl (Impl (Not b) (Impl (Impl a b) (Not b))) (Impl (Impl (Not b) (Impl (Impl (Impl a b) (Not b)) (Impl (Impl (Impl a b) (Impl (Not b) (Impl a (Not b)))) (Impl (Impl a b) (Impl a (Not b)))))) (Impl (Not b) (Impl (Impl (Impl a b) (Impl (Not b) (Impl a (Not b)))) (Impl (Impl a b) (Impl a (Not b))))))),
    (Impl (Impl (Not b) (Impl (Impl (Impl a b) (Not b)) (Impl (Impl (Impl a b) (Impl (Not b) (Impl a (Not b)))) (Impl (Impl a b) (Impl a (Not b)))))) (Impl (Not b) (Impl (Impl (Impl a b) (Impl (Not b) (Impl a (Not b)))) (Impl (Impl a b) (Impl a (Not b)))))),
    (Impl (Not b) (Impl (Impl (Impl a b) (Impl (Not b) (Impl a (Not b)))) (Impl (Impl a b) (Impl a (Not b))))),
    (Impl (Impl (Not b) (Impl (Impl a b) (Impl (Not b) (Impl a (Not b))))) (Impl (Impl (Not b) (Impl (Impl (Impl a b) (Impl (Not b) (Impl a (Not b)))) (Impl (Impl a b) (Impl a (Not b))))) (Impl (Not b) (Impl (Impl a b) (Impl a (Not b)))))),
    (Impl (Impl (Not b) (Impl (Impl (Impl a b) (Impl (Not b) (Impl a (Not b)))) (Impl (Impl a b) (Impl a (Not b))))) (Impl (Not b) (Impl (Impl a b) (Impl a (Not b))))),
    (Impl (Not b) (Impl (Impl a b) (Impl a (Not b)))),
    (Impl (Impl a b) (Impl (Impl a (Not b)) (Not a))),
    (Impl (Impl (Impl a b) (Impl (Impl a (Not b)) (Not a))) (Impl (Not b) (Impl (Impl a b) (Impl (Impl a (Not b)) (Not a))))),
    (Impl (Not b) (Impl (Impl a b) (Impl (Impl a (Not b)) (Not a)))),
    (Impl (Impl (Impl a b) (Impl a (Not b))) (Impl (Impl (Impl a b) (Impl (Impl a (Not b)) (Not a))) (Impl (Impl a b) (Not a)))),
    (Impl (Impl (Impl (Impl a b) (Impl a (Not b))) (Impl (Impl (Impl a b) (Impl (Impl a (Not b)) (Not a))) (Impl (Impl a b) (Not a)))) (Impl (Not b) (Impl (Impl (Impl a b) (Impl a (Not b))) (Impl (Impl (Impl a b) (Impl (Impl a (Not b)) (Not a))) (Impl (Impl a b) (Not a)))))),
    (Impl (Not b) (Impl (Impl (Impl a b) (Impl a (Not b))) (Impl (Impl (Impl a b) (Impl (Impl a (Not b)) (Not a))) (Impl (Impl a b) (Not a))))),
    (Impl (Impl (Not b) (Impl (Impl a b) (Impl a (Not b)))) (Impl (Impl (Not b) (Impl (Impl (Impl a b) (Impl a (Not b))) (Impl (Impl (Impl a b) (Impl (Impl a (Not b)) (Not a))) (Impl (Impl a b) (Not a))))) (Impl (Not b) (Impl (Impl (Impl a b) (Impl (Impl a (Not b)) (Not a))) (Impl (Impl a b) (Not a)))))),
    (Impl (Impl (Not b) (Impl (Impl (Impl a b) (Impl a (Not b))) (Impl (Impl (Impl a b) (Impl (Impl a (Not b)) (Not a))) (Impl (Impl a b) (Not a))))) (Impl (Not b) (Impl (Impl (Impl a b) (Impl (Impl a (Not b)) (Not a))) (Impl (Impl a b) (Not a))))),
    (Impl (Not b) (Impl (Impl (Impl a b) (Impl (Impl a (Not b)) (Not a))) (Impl (Impl a b) (Not a)))),
    (Impl (Impl (Not b) (Impl (Impl a b) (Impl (Impl a (Not b)) (Not a)))) (Impl (Impl (Not b) (Impl (Impl (Impl a b) (Impl (Impl a (Not b)) (Not a))) (Impl (Impl a b) (Not a)))) (Impl (Not b) (Impl (Impl a b) (Not a))))),
    (Impl (Impl (Not b) (Impl (Impl (Impl a b) (Impl (Impl a (Not b)) (Not a))) (Impl (Impl a b) (Not a)))) (Impl (Not b) (Impl (Impl a b) (Not a)))),
    (Impl (Not b) (Impl (Impl a b) (Not a))),
    (Impl (Impl (Not b) (Impl (Impl a b) (Not a))) (Impl (Impl (Not b) (Impl (Impl (Impl a b) (Not a)) (Impl (Impl (Impl a b) (Not (Not a))) (Not (Impl a b))))) (Impl (Not b) (Impl (Impl (Impl a b) (Not (Not a))) (Not (Impl a b)))))),
    (Impl (Impl (Not b) (Impl (Impl (Impl a b) (Not a)) (Impl (Impl (Impl a b) (Not (Not a))) (Not (Impl a b))))) (Impl (Not b) (Impl (Impl (Impl a b) (Not (Not a))) (Not (Impl a b))))),
    (Impl (Not b) (Impl (Impl (Impl a b) (Not (Not a))) (Not (Impl a b)))),
    (Impl (Not (Not a)) (Impl (Impl a b) (Not (Not a)))),
    (Impl (Impl (Not (Not a)) (Impl (Impl a b) (Not (Not a)))) (Impl (Not b) (Impl (Not (Not a)) (Impl (Impl a b) (Not (Not a)))))),
    (Impl (Not b) (Impl (Not (Not a)) (Impl (Impl a b) (Not (Not a))))),
    (Impl (Not (Not a)) (Impl (Not b) (Not (Not a)))),
    (Impl (Not b) (Not (Not a))),
    (Impl (Impl (Not b) (Not (Not a))) (Impl (Impl (Not b) (Impl (Not (Not a)) (Impl (Impl a b) (Not (Not a))))) (Impl (Not b) (Impl (Impl a b) (Not (Not a)))))),
    (Impl (Impl (Not b) (Impl (Not (Not a)) (Impl (Impl a b) (Not (Not a))))) (Impl (Not b) (Impl (Impl a b) (Not (Not a))))),
    (Impl (Not b) (Impl (Impl a b) (Not (Not a)))),
    (Impl (Impl (Not b) (Impl (Impl a b) (Not (Not a)))) (Impl (Impl (Not b) (Impl (Impl (Impl a b) (Not (Not a))) (Not (Impl a b)))) (Impl (Not b) (Not (Impl a b))))),
    (Impl (Impl (Not b) (Impl (Impl (Impl a b) (Not (Not a))) (Not (Impl a b)))) (Impl (Not b) (Not (Impl a b)))),
    (Impl (Not b) (Not (Impl a b))),
    (Impl (Impl (Not b) (Not (Not (Impl a b)))) (Not (Not b))),
    (Impl (Not (Not (Impl a b))) (Impl (Not b) (Not (Not (Impl a b))))),
    (Impl (Not b) (Not (Not (Impl a b)))),
    (Not (Not b))
    ]
